/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015-2016 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */

module Example.Diamond

import Boot.Core

class diamondClass this:string,number {
    create : number -> string 
} {
    def create c = 
        let char = 'A' + $ this._2 - c in
        let line = this._1 set c char set (this._1 length - 1 - c) char in
            when (c <= 0) 
            then { line } 
            else { line + eol + { self create (c - 1) } + eol + line }
}

def diamond : number -> string = n -> {
    let emptyLine = " " * (2 * n - 1) in 
        diamondClass (emptyLine,(n - 1)) create (n - 1)
}
