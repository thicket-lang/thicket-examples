/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015-2016 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
module Example.Life.Game.State

import Data.Comparable
import Data.Hashable
import Data.Boolean

type State { Alive Dead }

class state this:State {
    with comparable[state]
    with hashable[state]
    
    fold : [b] b -> b -> b
 } {
    def unbox = self
    
    def hash = self fold 0 1

    def (==) s = self fold (s fold true false) (s fold false true)
    def (<?) s = self fold (s fold false true) false

    def Alive.fold a _ = a
    def Dead.fold  _ d = d
}

def alive : state = { state Alive }
def dead  : state = { state Dead  }
