/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015-2016 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
 module Example.Life

import Boot.Client
import Example.Life.Board    
import Data.Mutable.Ref

def world : World = pos -> {
    when ((pos.x * pos.y) % (pos.y + 1) == 2)
    then alive
    else dead
}

let next = next in
let world = ref world in
let size = 5 in
    do {
      createWorld size
    }; 
    { 
      renderWorld size world.get 
    };
    { 
      for run <- { document "next" find } 
      yield 
        run onMouseEvent MouseClick $ _ -> 
        do {
            world.set $ next world.get
        } return renderWorld size world.get
    } return ()