{"namespace":"Example.Lambda.Parser","objcode":[[13,["termParser",[[2,"Example.Lambda.Parser.simpleTermParser"],10,[6,"~"],10,[9,[[2,"Parser.LL.lazy"],10,[2,"Example.Lambda.Parser.termParser"],10,[6,"?"],4]],4,10,[6,"map"],10,[8,[[3,1],10,[6,"_2"],10,[6,"fold"],10,[3,1],10,[6,"_1"],4,10,[9,[[2,"Example.Lambda.Term.Application"],10,[3,1],10,[6,"_1"],4]],5]],5]]],[13,["simpleTermParser",[[2,"Parser.Token.tkNumber"],10,[6,"map"],10,[2,"Example.Lambda.Term.Constant"],4,10,[6,"|"],10,[9,[[2,"Parser.Token.tkKey"],10,[9,[[2,"Data.String.string"],10,[1,"("],4]],4,10,[6,"~>"],10,[2,"Example.Lambda.Parser.termParser"],4,10,[6,"<~"],10,[9,[[2,"Parser.Token.tkKey"],10,[9,[[2,"Data.String.string"],10,[1,")"],4]],4]],4]],4,10,[6,"|"],10,[9,[[2,"Parser.Token.tkIdent"],10,[6,"~"],10,[2,"Parser.Token.tkKey"],10,[9,[[2,"Data.String.string"],10,[1,"->"],4]],4,10,[6,"~>"],10,[2,"Example.Lambda.Parser.termParser"],4,10,[6,"?"],4,10,[6,"map"],10,[8,[[3,1],10,[6,"_2"],10,[6,"fold"],10,[9,[[2,"Example.Lambda.Term.Variable"],10,[3,1],10,[6,"_1"],4]],4,10,[9,[[2,"Example.Lambda.Term.Abstraction"],10,[3,1],10,[6,"_1"],4]],5]],4]],5]]],[13,["tokenize",[[8,[[2,"Parser.Tokenizer.tokenize"],10,[9,[[2,"Parser.Genlex.genlex"],10,[3,1],4]],5]],10,[2,"Data.List.List"],10,[6,"["],10,[9,[[2,"Data.String.string"],10,[1,"->"],4]],4,10,[6,";"],10,[9,[[2,"Data.String.string"],10,[1,"("],4]],4,10,[6,";"],10,[9,[[2,"Data.String.string"],10,[1,")"],4]],4,10,[6,"]"],5]]],[13,["decode",[[8,[[2,"Example.Lambda.Parser.tokenize"],10,[3,1],4,10,[6,"flatmap"],10,[8,[[2,"Example.Lambda.Parser.termParser"],10,[6,"<~"],10,[2,"Parser.LL.eos"],4,10,[6,"parse"],10,[3,2],4,10,[9,[[2,"Data.Number.number"],10,[1,0],4]],4,10,[6,"toTry"],10,[6,"map"],10,[8,[[3,3],15]],5]],5]],15]]]],"main":[]}