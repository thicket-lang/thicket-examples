{"namespace":"Example.Lambda.Interpret","objcode":[[12,["interpreter",[["Constant.eval",[[8,[[2,"Data.Try.success"],10,[9,[[2,"Example.Lambda.Value.value"],10,[9,[[2,"Example.Lambda.Value.CstVal"],10,[3,1],10,[6,"value"],4]],4]],5]],15]],["Variable.eval",[[8,[[3,3],10,[6,"find"],10,[3,1],10,[6,"name"],4,10,[6,"fold"],10,[9,[[2,"Data.Try.failure"],10,[9,[[2,"Data.String.string"],10,[1,"Unbound variable: "],4,10,[6,"+"],10,[3,1],10,[6,"name"],4]],4]],4,10,[2,"Data.Try.success"],5]],15]],["Application.eval",[[8,[[2,"Example.Lambda.Interpret.interpreter"],10,[3,1],10,[6,"abstraction"],4,10,[6,"eval"],10,[3,3],4,10,[6,"flatmap"],10,[8,[[2,"Example.Lambda.Interpret.interpreter"],10,[3,1],10,[6,"argument"],4,10,[6,"eval"],10,[3,3],4,10,[6,"flatmap"],10,[8,[[3,4],10,[6,"fold"],10,[8,[[2,"Data.Try.failure"],10,[9,[[2,"Data.String.string"],10,[1,"Waiting for a function"],4]],5]],4,10,[8,[[8,[[2,"Example.Lambda.Interpret.interpreter"],10,[3,6],10,[6,"_2"],4,10,[6,"eval"],10,[9,[[3,7],10,[6,"add"],10,[3,6],10,[6,"_1"],4,10,[3,5],4]],5]],15]],4,10,[6,"map"],10,[8,[[3,6],15]],5]],5]],5]],15]],["Abstraction.eval",[[8,[[2,"Data.Try.success"],10,[9,[[2,"Example.Lambda.Value.value"],10,[9,[[2,"Example.Lambda.Value.Closure"],10,[9,[[2,"Data.Pair.Pair"],10,[3,1],10,[6,"variable"],4,10,[3,1],10,[6,"body"],4]],4,10,[3,3],4]],4]],5]],15]]],[]]],[13,["interpret",[[8,[[2,"Example.Lambda.Interpret.interpreter"],10,[3,1],4,10,[6,"eval"],10,[9,[[2,"Data.Hashmap.hashmap2map"],10,[2,"Data.Hashmap.newHashmap"],4]],5]],15]]]],"main":[]}