/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015-2016 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */
 
module Example.Lambda

import Boot.Core

from Example.Lambda.Parser import decode
from Example.Lambda.Interpret import interpret
from Example.Lambda.Value import value

/**
 * Some simple examples
 */
 
def execute : string -> try[value] = code -> {
    for term  <- {decode code}
        value <- {interpret term}
    yield value
}

def executeAndPrint : string -> try[consoleClass] = code -> {
    for value <- {execute code}
    yield console log $ $"$(code) = $(value)"
}

do {
    executeAndPrint "x->x"
    recoverWith (e -> console.log $ $"Error: $(e)")
}; {
    executeAndPrint "123"
    recoverWith (e -> console.log $ $"Error: $(e)")
}; {    
    executeAndPrint "(x -> x) 123"
    recoverWith (e -> console.log $ $"Error: $(e)")
}; {    
    executeAndPrint "(x -> y -> y) 123 456"
    recoverWith (e -> console.log $ $"Error: $(e)")
}
return ()