/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015-2016 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */

module Example.Console.Core

from Lang.Do import do
from Data.Option import *
from Data.Unit import unit
from Data.String import string
from Client.Document import *
from Client.Event import *
from System.Internal import internal
from System.Console import console

class runtimeClass this:unit {
    run : string -> runtimeClass    
    log : (string -> unit) -> runtimeClass
} {
    def run = internal "runtime.execute" self
    def log = internal "runtime.logger" self string
}

class logger this:Option[dom] {
    log : string -> unit
    clear : unit
} {
    def None.log s = 
        do { console log s }
        return ()

    def Some.log s = 
        do { this._ addChild <div> s </div> }
        return ()

    def None.clear = ()

    def Some.clear = 
        do { this._ removeChilds }
        return ()        
}

def consume : [a] a -> unit = a -> {
    do { a }
    return ()
}

def runtime : (string -> unit) -> runtimeClass = { 
    runtimeClass () log 
}
