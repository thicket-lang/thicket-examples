/*
 * Thicket
 * https://github.com/d-plaindoux/thicket
 *
 * Copyright (c) 2015-2016 Didier Plaindoux
 * Licensed under the LGPL2 license.
 */

module Example.Console.Application

import Boot.Core
import Boot.Client
import System.Console

from Example.Console.Core import *

model Components {
    content : option[dom]
    output  : option[dom]
}

def makeContent : logger -> runtimeClass -> dom -> dom -> dom = logger runtime content output -> {
    content onKeyEvent KeyPress $ d n -> 
        when (n == keys.CARRIAGE_RETURN) 
        then { do 
               { output removeChilds };
               { content value map $ s -> logger.log s };
               { content value map $ runtime run };
               { content replaceWith $ makeContent logger runtime (content clone) output }
               return () 
             }
        else { () }
}

def startApplication : Components -> unit = component -> {
    let logger = logger $ component.output unbox in
    let runtime = runtime $ logger.log in
        do
        {
           for output <- component.output
               content <- component.content
            yield 
                makeContent logger runtime content output
        }
        return ()
}